pipeline {
        agent {
            docker { image 'python:3.8' }
        }
         stages {
            stage('Build') {
                steps {
                         
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                dir("SecureCity"){
                                        sh 'python3 -m pip install --upgrade pip setuptools wheel'
                                        sh 'pip3 install -r requirements.txt'
                                        sh 'pip3 install django-crispy-forms'
                                        sh 'python manage.py flush --no-input'
                                        sh 'rm -r */migrations/0*'
                                        sh 'python manage.py makemigrations'
                                        sh 'python manage.py migrate'
                                }
                        } 
                }
                
            }
            stage('Test') {
                steps {
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                //sh 'python SecureCity/manage.py test --pythonpath SecureCity/HomePage/tests.py'
                                //coverage django test command
//                                 sh 'python3 -m pip uninstall coverage --yes'
//                                 sh 'python3 -m pip install coverage'


//                                 sh 'python -m coverage run SecureCity/manage.py test ./SecureCity --pattern="SecureCity/*tests*.py"'
//                                 sh 'coverage run SecureCity/manage.py test ./SecureCity'
//

//                                 sh 'python -m coverage run --source=SecureCity/manage.py SecureCity/manage.py test'
                                //sh 'python SecureCity/manage.py test ./SecureCity'
                                dir("SecureCity"){
                                        sh 'python -m coverage run --source="." manage.py test'
                                        sh 'python -m coverage report'
                                        //sh 'python -m coverage run manage.py test'
                                        //sh 'python -m coverage report'
                                }
//                                 sh 'coverage report'
                        }
                }
            }
        }
       
    }
