pipeline {
        agent {
            docker { image 'python:3.8' }
        }
         stages {
            stage('Build') {
                steps {
                         
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                dir("SecureCity"){
                                        sh 'python3 -m pip install --upgrade pip setuptools wheel'
                                        sh 'pip3 install -r requirements.txt'
                                        sh 'pip3 install django-crispy-forms'
                                        sh 'python manage.py flush --no-input'
                                }
                        } 
                }
                
            }
            stage('Compile') {
                steps {
                         
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                dir("SecureCity"){
                                        sh 'rm -f -r */migrations/0*'
                                        sh 'python manage.py makemigrations'
                                        sh 'python manage.py migrate'
                                        sh 'python manage.py check'     // compilation testing
                                }
                        } 
                }
                
            }
            stage('UniTest') {
                steps {
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                dir("SecureCity"){
                                        sh 'python -m coverage run --source="." --tag=unitest test'
                                }
                        }
                }
            }
             stage('IntegrationTest') {
                steps {
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                dir("SecureCity"){
                                        sh 'python -m coverage run --source="." --tag=integrationTest'
                                }
                        }
                }
            }
            stage('Coverage') {
                steps {
                        withEnv(["HOME=${env.WORKSPACE}"]){
                                dir("SecureCity"){
                                        sh 'python -m coverage run --source="." manage.py test'
                                        sh 'python -m coverage report'
                                }
                        }
                }
            }
        }
       
    }
